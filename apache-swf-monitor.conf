#
# SWF Monitor Apache Configuration
# 
# This serves the Django application via mod_wsgi
# Static files are served directly by Apache
#
# NOTE: This configuration works with the existing Apache SSL setup.
# SSL configuration is handled by the system's ssl.conf file.

# WSGI Configuration for SWF Monitor
WSGIDaemonProcess swf-monitor \
    python-path=/opt/swf-monitor/current/src:/opt/swf-monitor/current/.venv/lib/python3.11/site-packages \
    python-home=/opt/swf-monitor/current/.venv \
    processes=2 \
    threads=15 \
    display-name=%{GROUP} \
    lang='en_US.UTF-8' \
    locale='en_US.UTF-8'

WSGIScriptAlias /swf-monitor /opt/swf-monitor/current/src/swf_monitor_project/wsgi.py process-group=swf-monitor

# Ensure Authorization header is passed through to Django (needed for DRF Token auth)
WSGIPassAuthorization On

# Static files served directly by Apache
Alias /swf-monitor/static /opt/swf-monitor/shared/static
<Directory /opt/swf-monitor/shared/static>
    Require all granted
</Directory>

# WSGI script permissions
<Directory /opt/swf-monitor/current/src/swf_monitor_project>
    <Files wsgi.py>
        Require all granted
    </Files>
</Directory>

# Security headers for SWF Monitor
<Location /swf-monitor>
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
</Location>

# Allow backend token auth on API endpoints; avoid OIDC login redirects
<LocationMatch "^/swf-monitor/api/">
    Require all granted
    # If mod_auth_openidc is enabled elsewhere, pass unauthenticated requests through
    # so Django/DRF can handle Token auth without redirects. Do not enforce OIDC here.
    <IfModule mod_auth_openidc.c>
        OIDCUnAuthAction pass
        # Intentionally no AuthType/Require here; outer 'Require all granted' applies.
    </IfModule>
</LocationMatch>