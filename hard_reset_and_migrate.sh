#!/bin/bash

# HARD RESET Database Migration Script for SWF Monitor
# WARNING: This script completely wipes monitor_app schema AND DATA and recreates it
# Use only when normal Django migrations are broken or for clean development setup
# Normal workflow should use: python manage.py makemigrations && python manage.py migrate

set -e  # Exit on any error

echo "=== SWF Monitor HARD RESET Migration Script ==="
echo "This script will:"
echo "1. Wipe monitor_app tables completely (schema AND data)"
echo "2. Let Django create clean migrations from current models"
echo "3. Apply all migrations from scratch"
echo "4. Generate test data using django-seed"
echo "5. Load test data"
echo ""

# Ensure we're in the right directory and virtual environment
cd "$(dirname "$0")"
if [[ "$VIRTUAL_ENV" == "" ]]; then
    echo "Activating virtual environment..."
    if [[ -z "$PARENT_DIR" ]]; then
        echo "❌ Error: PARENT_DIR not set"
        echo "   Please run install.sh from swf-testbed directory first"
        exit 1
    fi
    if [[ -f "$PARENT_DIR/swf-testbed/.venv/bin/activate" ]]; then
        source "$PARENT_DIR/swf-testbed/.venv/bin/activate"
    else
        echo "❌ Error: Virtual environment not found at $PARENT_DIR/swf-testbed/.venv/"
        echo "   Please run install.sh from swf-testbed directory first"
        exit 1
    fi
fi

echo "Step 1: Wiping monitor_app tables completely (schema and data)..."
cd src
python manage.py migrate monitor_app zero --noinput

echo "Step 2: Creating fresh migrations..."
python manage.py makemigrations

echo "Step 3: Applying all migrations from scratch..."
python manage.py migrate

echo "Step 4: Generating test data based on current schema using django-seed..."
python manage.py seed monitor_app --number=10

echo "Step 5: Loading test data..."
cd ..
python src/manage.py shell -c "
# Test data has already been generated by django-seed
print('Test data loaded successfully via django-seed')
"

echo ""
echo "=== Migration Complete ==="
echo "Database has been safely migrated with test data loaded."
echo "You can now access the web interface at http://localhost:8000"